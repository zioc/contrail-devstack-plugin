#!/bin/bash
# Contrail neutron plugin configuration functions

function neutron_plugin_create_nova_conf() {
    :
}

function neutron_plugin_configure_common() {
    Q_PLUGIN_CONF_PATH=etc/neutron/plugins/opencontrail
    Q_PLUGIN_CONF_FILENAME=ContrailPlugin.ini
    Q_PLUGIN_CLASS=${Q_PLUGIN_CLASS:-contrail}
}


function neutron_plugin_configure_service() {
    iniset /$Q_PLUGIN_CONF_FILE APISERVER multi_tenancy $MULTI_TENANCY
    iniset /$Q_PLUGIN_CONF_FILE APISERVER api_server_port 8082
    iniset /$Q_PLUGIN_CONF_FILE APISERVER api_server_ip $APISERVER_IP
    iniset /$Q_PLUGIN_CONF_FILE APISERVER apply_subnet_host_routes True

    iniset $NEUTRON_CONF keystone_authtoken admin_user $CONTRAIL_ADMIN_USER
    iniset $NEUTRON_CONF keystone_authtoken admin_password $CONTRAIL_ADMIN_PASSWORD
    iniset $NEUTRON_CONF keystone_authtoken admin_tenant_name $CONTRAIL_ADMIN_PROJECT
    iniset $NEUTRON_CONF keystone_authtoken auth_protocol $KEYSTONE_AUTH_PROTOCOL
    iniset $NEUTRON_CONF keystone_authtoken auth_host $KEYSTONE_AUTH_HOST

    local PY_PLUGIN_PATH=$(python -c "import neutron_plugin_contrail; print neutron_plugin_contrail.__path__[0]")
    iniset $NEUTRON_CONF DEFAULT api_extensions_path extensions:$PY_PLUGIN_PATH/extensions
    iniset $NEUTRON_CONF quotas quota_driver neutron_plugin_contrail.quota.driver.QuotaDriver
    if [[ $AAA_MODE != 'no-auth' ]]; then
        # Add Contrail middleware to set the authentication token in the
        # request thread as it needed by VNC API client in the core driver
        NEUTRON_API_PASTE_FILE=$NEUTRON_CONF_DIR/api-paste.ini
        iniset $NEUTRON_API_PASTE_FILE filter:user_token paste.filter_factory neutron_plugin_contrail.plugin.middlewares.user_token:token_factory
        array=($(iniget_multiline $NEUTRON_API_PASTE_FILE composite:neutronapi_v2_0 keystone))
        index=$(echo ${array[@]/extensions//} | cut -d/ -f1 | wc -w | tr -d ' ')
        new_arr=( ${array[@]:0:$index} 'user_token' ${array[@]:$index} )
        iniset $NEUTRON_API_PASTE_FILE composite:neutronapi_v2_0 keystone "$(echo ${new_arr[@]})"
    fi
}

function neutron_plugin_setup_interface_driver() {
    :
}

function neutron_plugin_configure_debug_command() {
    :
}

function is_neutron_ovs_base_plugin() {
    # False
    return 1
}
function has_neutron_plugin_security_group() {
    # True
    return 0
}

function neutron_plugin_check_adv_test_requirements() {
    return 0
}

function neutron_plugin_create_nova_conf {
    if [[ "stable/juno stable/icehouse" =~ $NOVA_BRANCH ]]; then
        iniset $NOVA_CONF DEFAULT network_api_class nova_contrail_vif.contrailvif.ContrailNetworkAPI
    fi

}
